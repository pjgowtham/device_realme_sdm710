<?xml version="1.0" encoding="utf-8"?>
<!--
/**
 * Copyright (c) 2009, The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds.  Do not translate. -->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <!-- The list of vendor package signatures that should also be considered
    platform signatures, specifically for use on devices with a vendor partition. -->
    <string-array name="config_vendorPlatformSignatures">
        <item>308203ef308202d7a003020102020900e3258054350f9f87300d06092a864886f70d010105050030818d310b300906035504061302434e3112301006035504080c094775616e67446f6e673116301406035504070c0d5368656e5a68656e20566965773110300e060355040a0c07416e64726f69643110300e060355040b0c07416e64726f69643110300e06035504030c07416e64726f6964311c301a06092a864886f70d010901160d6f70706f406f70706f2e636f6d301e170d3138313132373036353430345a170d3436303431343036353430345a30818d310b300906035504061302434e3112301006035504080c094775616e67446f6e673116301406035504070c0d5368656e5a68656e20566965773110300e060355040a0c07416e64726f69643110300e060355040b0c07416e64726f69643110300e06035504030c07416e64726f6964311c301a06092a864886f70d010901160d6f70706f406f70706f2e636f6d30820122300d06092a864886f70d01010105000382010f003082010a0282010100a3076d6d4300b36bd274f72c96462ff5e600aae0dcead9929651966d79c281fd39b9a86810377fcbaff9069d47eb8a18f0585e3675bc6e8226dcea48b232d73fd8a2935b71beca7d2158abcd89ac2d3036e384974f5e617f8ed9d4dc5131b15c9f1d58af709df262e31f91c0b3f6ff4addea8796b7e5f485227adf7439307855a324175db223bbd8ba3d67b193e445c8ccfe41a818cb1fdf461c64fdecdaa94f462ccdaf772a2711f0213ce90b4e284080cc3a5ddd303e6e1bd30e7262bd806e7060b0a4a5744381118d4759fa0e78277085678cfe72e3ea2c0b56c3491f2c4999ad1c6cca42b0bf3377118798700e0aca5d0da7dd8648944bfef1b7ab72e2ff0203010001a350304e301d0603551d0e041604146aa620e9b2faf6c86f2497fbd74c350c6548d69b301f0603551d230418301680146aa620e9b2faf6c86f2497fbd74c350c6548d69b300c0603551d13040530030101ff300d06092a864886f70d0101050500038201010060dbb658e3386c5a37d3e0deca9f4dc75935bcaedacbe5aa280ab33d0fbfd06b1edf260b807dc9fc60f3011cb04af3bbdd9e53da1184cee0978320c5afbc5dc7006429d0b40392340afb9c32055eb2d642fe94f8f7cbab276f313fca521bee1d16250c6e149fc0ae0fa63a0f3d5bfc3d3b243759cacf04cfaf571af5da98e19a7f519a74081ad337d5ab5fd55c6b06570434edae4602f7a4b59ee4e10e7d2f52d893bb6caed46af5a271aac7b06e14df2bd1f0c4dd6d4c33adca000de1bb8e78875f3c801da0be63f1b52c59913fe6c24c91e3182bef40d6369f3ba8bb4df98587c81f36a110fe16a4cac9f5061b03a056e15fb3bee873754b9a7472da914e0d</item>
    </string-array>

    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">1</integer>

    <!-- Maximum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness above this level. -->
    <integer name="config_screenBrightnessSettingMaximum">255</integer>

    <!-- Light sensor event rate in milliseconds for automatic brightness control. -->
    <integer name="config_autoBrightnessLightSensorRate">500</integer>

    <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
         for debouncing the light sensor.  Different constants are used to debounce the light sensor
         when adapting to brighter or darker environments.  This parameter controls how quickly
         brightness changes occur in response to an observed change in light level that exceeds the
         hysteresis threshold. -->
    <integer name="config_autoBrightnessBrighteningLightDebounce">2000</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">4000</integer>

    <!-- Default screen brightness setting.
         Must be in the range specified by minimum and maximum. -->
    <integer name="config_screenBrightnessSettingDefault">536</integer>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N  1 zones as follows:
         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1     array[N] <= LUX < infinity
         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>2</item>
        <item>3</item>
        <item>4</item>
        <item>8</item>
        <item>12</item>
        <item>20</item>
        <item>33</item>
        <item>55</item>
        <item>90</item>
        <item>148</item>
        <item>245</item>
        <item>403</item>
        <item>665</item>
        <item>1097</item>
        <item>1808</item>
        <item>2981</item>
        <item>5000</item>
        <item>10000</item>
    </integer-array>

    <!-- Array of desired screen brightness in nits corresponding to the lux values
         in the config_autoBrightnessLevels array. As with config_screenBrightnessMinimumNits and
         config_screenBrightnessMaximumNits, the display brightness is defined as the measured
         brightness of an all-white image.
         If this is defined then:
            - config_autoBrightnessLcdBacklightValues should not be defined
            - config_screenBrightnessNits must be defined
            - config_screenBrightnessBacklight must be defined
         This array should have size one greater than the size of the config_autoBrightnessLevels
         array. The brightness values must be non-negative and non-decreasing. This must be
         overridden in platform specific overlays -->
    <array name="config_autoBrightnessDisplayValuesNits">
        <item>10.25254</item>    <!--  0 - 1  -->
        <item>25.46192</item>    <!--  1 - 2  -->
        <item>32.9231998399</item>    <!--  2 - 3  -->
        <item>37.2564137654</item>    <!--  3 - 4  -->
        <item>40.1587949692</item>    <!--  4 - 8  -->
        <item>47.2941398812</item>    <!--  8 - 12  -->
        <item>51.9914615527</item>    <!--  12 - 20  -->
        <item>58.8613168724</item>    <!--  20 - 33  -->
        <item>66.9820439119</item>    <!--  33 - 55  -->
        <item>77.3881426005</item>    <!--  55 - 90  -->
        <item>90.0748914709</item>    <!--  90 - 148  -->
        <item>106.099757597</item>    <!--  148 - 245  -->
        <item>126.784839595</item>    <!--  245 - 403  -->
        <item>154.858709208</item>    <!--  403 - 665  -->
        <item>190.979678749</item>    <!--  665 - 1097  -->
        <item>236.557765614</item>    <!--  1097 - 1808  -->
        <item>291.731912956</item>    <!--  1808 - 2981  -->
        <item>375.646626771</item>    <!--  2981 - 5000  -->
        <item>476.141854366</item>    <!--  5000 - 10000  -->
        <item>610.667755086</item>    <!--  10000+  -->
    </array>
    
   <!-- An array describing the screen's backlight values corresponding to the brightness
        values in the config_screenBrightnessNits array.
        This array should be equal in size to config_screenBrightnessBacklight. -->
    <integer-array name="config_screenBrightnessBacklight">
        <item>1</item>
        <item>255</item>
    </integer-array>
    
    <!-- An array of floats describing the screen brightness in nits corresponding to the backlight
         values in the config_screenBrightnessBacklight array.  On OLED displays these  values
         should be measured with an all white image while the display is in the fully on state.
         Note that this value should *not* reflect the maximum brightness value for any high
         brightness modes but only the maximum brightness value obtainable in a sustainable manner.
         This array should be equal in size to config_screenBrightnessBacklight -->
    <array name="config_screenBrightnessNits">
        <item>2.0</item>
        <item>450.0</item>
    </array>

    <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_dynamicHysteresisLuxLevels. The brightening threshold is calculated as
         lux * (1.0f + CONSTRAINT_VALUE). When the current lux is higher than this threshold,
         the screen brightness is recalculated. See the config_dynamicHysteresisLuxLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_dynamicHysteresisBrightLevels">
        <item>2000</item>
        <item>2000</item>
        <item>1000</item>
        <item>1000</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_dynamicHysteresisLuxLevels. The darkening threshold is calculated as
         lux * (1.0f - CONSTRAINT_VALUE). When the current lux is lower than this threshold,
         the screen brightness is recalculated. See the config_dynamicHysteresisLuxLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_dynamicHysteresisDarkLevels">
        <item>800</item>
        <item>800</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
    </integer-array>

    <!-- Array of ambient lux threshold values. This is used for determining hysteresis constraint
         values by calculating the index to use for lookup and then setting the constraint value
         to the corresponding value of the array. The new brightening hysteresis constraint value
         is the n-th element of config_dynamicHysteresisBrightLevels, and the new darkening
         hysteresis constraint value is the n-th element of config_dynamicHysteresisDarkLevels.
         The (zero-based) index is calculated as follows: (MAX is the largest index of the array)
         condition                      calculated index
         value < lux[0]                 0
         lux[n] <= value < lux[n+1]     n+1
         lux[MAX] <= value              MAX+1 -->
    <integer-array name="config_dynamicHysteresisLuxLevels">
        <item>2</item>
        <item>10</item>
        <item>30</item>
        <item>100</item>
        <item>800</item>
        <item>2000</item>
        <item>4000</item>
    </integer-array>
    

    <!-- If true, the display will be shifted around in ambient mode. -->
    <bool name="config_enableBurnInProtection">true</bool>

    <!-- Specifies the maximum burn-in offset displacement from the center. If -1, no maximum value
         will be used. -->
    <integer name="config_burnInProtectionMaxRadius">-1</integer>

    <!-- Specifies the minimum burn-in offset horizontally. -->
    <integer name="config_burnInProtectionMinHorizontalOffset">-15</integer>

    <!-- Specifies the maximum burn-in offset horizontally. -->
    <integer name="config_burnInProtectionMaxHorizontalOffset">15</integer>

    <!-- Specifies the minimum burn-in offset vertically. -->
    <integer name="config_burnInProtectionMinVerticalOffset">-40</integer>

    <!-- Specifies the maximum burn-in offset vertically. -->
    <integer name="config_burnInProtectionMaxVerticalOffset">40</integer>
    
    <integer-array name="config_availableColorModes">
        <item>0</item>
        <item>1</item>
        <item>3</item>
        <item>256</item>
        <item>257</item>
        <item>258</item>
        <item>259</item>
        <item>260</item>
        <item>261</item>
        <item>262</item>
        <item>263</item>
        <item>264</item>
        <item>265</item>
    </integer-array>
    
    <!-- Boolean indicating if current platform supports BLE peripheral mode -->
    <bool name="config_bluetooth_le_peripheral_mode_supported">true</bool>
    
    <!-- Operating volatage for bluetooth controller. 0 by default-->
     <integer name="config_bluetooth_operating_voltage_mv">3300</integer>

    <!-- Whether WiFi display is supported by this device.
         There are many prerequisites for this feature to work correctly.
         Here are a few of them:
         * The WiFi radio must support WiFi P2P.
         * The WiFi radio must support concurrent connections to the WiFi display and
           to an access point.
         * The Audio Flinger audio_policy.conf file must specify a rule for the "r_submix"
           remote submix module.  This module is used to record and stream system
           audio output to the WiFi display encoder in the media server.
         * The remote submix module "audio.r_submix.default" must be installed on the device.
         * The device must be provisioned with HDCP keys (for protected content).
    -->
    <bool name="config_enableWifiDisplay">true</bool>
    
    <bool name="config_enableNetworkLocationOverlay" translatable="false">true</bool>
    
    <!-- Number of physical SIM slots on the device. This includes both eSIM and pSIM slots, and
         is not necessarily the same as the number of phones/logical modems supported by the device.
         For example, a multi-sim device can have 2 phones/logical modems, but 3 physical slots,
         or a single SIM device can have 1 phones/logical modems, but 2 physical slots (one eSIM
         and one pSIM) -->
    <integer name="config_num_physical_slots">2</integer>

    <!-- Default list of files pinned by the Pinner Service -->
    <string-array translatable="false" name="config_defaultPinnerServiceFiles">
        <item>"/system/framework/arm64/boot-framework.oat"</item>
        <item>"/system/framework/framework.jar"</item>
        <item>"/system/framework/oat/arm64/services.odex"</item>
        <item>"/system/framework/services.jar"</item>
        <item>"/system/framework/arm64/boot.oat"</item>
        <item>"/system/framework/arm64/boot-core-libart.oat"</item>
        <item>"/apex/com.android.runtime/javalib/core-oj.jar"</item>
        <item>"/apex/com.android.runtime/javalib/core-libart.jar"</item>
        <item>"/apex/com.android.media/javalib/updatable-media.jar"</item>
        <item>"/product/priv-app/SystemUI/SystemUI.apk"</item>
        <item>"/product/priv-app/SystemUI/oat/arm64/SystemUI.odex"</item>
        <item>"/system/lib64/libsurfaceflinger.so"</item>
        <item>/system/lib64/libRScpp.so</item>
        <item>/system/lib64/libRS.so</item>
        <item>/system/lib64/libRS_internal.so</item>
        <item>/system/lib64/libbcinfo.so</item>
        <item>/system/lib64/libRSDriver.so</item>
        <item>/system/lib64/libRSCpuRef.so</item>
        <item>/system/lib64/libblas.so</item>
    </string-array>
    
        <!-- List of files pinned by the Pinner Service with the apex boot image b/119800099 -->
    <string-array translatable="false" name="config_apexBootImagePinnerServiceFiles">
        <item>"/system/framework/framework.jar"</item>
        <item>"/system/framework/services.jar"</item>
        <item>"/system/framework/arm64/apex.oat"</item>
        <item>"/system/framework/arm64/apex-core-libart.oat"</item>
        <item>"/apex/com.android.runtime/javalib/core-oj.jar"</item>
        <item>"/apex/com.android.runtime/javalib/core-libart.jar"</item>
        <item>"/apex/com.android.media/javalib/updatable-media.jar"</item>
        <item>"/system/priv-app/SystemUI/SystemUI.apk"</item>
        <item>"/system/lib64/libsurfaceflinger.so"</item>
    </string-array>
    
    <!-- Should the pinner service pin the Camera application? -->
    <bool name="config_pinnerCameraApp">true</bool>
    
    <!-- Should the pinner service pin the Home application? -->
    <bool name="config_pinnerHomeApp">true</bool>
    
    <!-- If true, the doze component is not started until after the screen has been turned off
    and the screen off animation has been performed. -->
     <bool name="config_dozeAfterScreenOffByDefault">false</bool>
     <bool name="config_dozeAlwaysOnDisplayAvailable">true</bool>
     <bool name="config_dozeAlwaysOnEnabled">false</bool>

    <!-- Whether the display blanks itself when transitioning from a doze to a non-doze state -->
    <bool name="config_displayBlanksAfterDoze">true</bool>

    <!-- RMX1921 : Define dimensions of the notch -->
    <string name="config_mainBuiltInDisplayCutout">M -143,0 L -143,76 L 143,76 L 143,0 Z</string>
    
    <dimen name="status_bar_height_portrait">32.0dip</dimen>
    
    <dimen name="status_bar_icon_size">22.0dip</dimen>
    <dimen name="status_bar_system_icon_intrinsic_size">17.0dip</dimen>
    <dimen name="status_bar_system_icon_size">15.0dip</dimen>

    <!-- Whether device supports double tap to wake -->
    <bool name="config_supportDoubleTapWake">true</bool>

    <!-- Cleanup unused fingerprints -->
    <bool name="config_cleanupUnusedFingerprints">false</bool>

</resources>
